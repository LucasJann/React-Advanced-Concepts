{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialState = {\n  word: \"\",\n  isTouched: false\n};\nconst inputReducerHandler = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      word: action.value,\n      isTouched: state.isTouched\n    };\n  }\n  if (action.type === \"BLUR\") {\n    return {\n      word: state.word,\n      isTouched: action.isTouched\n    };\n  }\n};\nconst useInput = validateInput => {\n  _s();\n  const [initState, dispatch] = useReducer(inputReducerHandler, initialState);\n  const isValidity = validateInput(initialState.word);\n  const inputNameChanged = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n  const inputIsTouched = () => {\n    dispatch({\n      type: \"BLUR\",\n      isTouched: true\n    });\n  };\n  return {\n    inputName: initState.word,\n    isVerificated: isValidity,\n    inputBlur: inputIsTouched,\n    inputNameChanged\n  };\n};\n_s(useInput, \"0eh9+jZA62YGBrtcoO0CgU1TP2c=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","initialState","word","isTouched","inputReducerHandler","state","action","type","value","useInput","validateInput","initState","dispatch","isValidity","inputNameChanged","event","target","inputIsTouched","inputName","isVerificated","inputBlur"],"sources":["C:/RepositÃ³rios/Repository2023/mainReact2.0/my-foodOrder-app/src/components/hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  word: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputReducerHandler = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return { word: action.value, isTouched: state.isTouched };\r\n  }\r\n  if (action.type === \"BLUR\") {\r\n    return { word: state.word, isTouched: action.isTouched};\r\n  }\r\n};\r\n\r\nconst useInput = (validateInput) => {\r\n  const [initState, dispatch] = useReducer(inputReducerHandler, initialState);\r\n\r\n  const isValidity = validateInput(initialState.word);\r\n\r\n  const inputNameChanged = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n  };\r\n\r\n  const inputIsTouched = () => {\r\n    dispatch({ type: \"BLUR\", isTouched: true });\r\n  };\r\n\r\n  return {\r\n    inputName: initState.word,\r\n    isVerificated: isValidity,\r\n    inputBlur: inputIsTouched,\r\n    inputNameChanged,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,mBAAmB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC7C,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MAAEL,IAAI,EAAEI,MAAM,CAACE,KAAK;MAAEL,SAAS,EAAEE,KAAK,CAACF;IAAU,CAAC;EAC3D;EACA,IAAIG,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;IAC1B,OAAO;MAAEL,IAAI,EAAEG,KAAK,CAACH,IAAI;MAAEC,SAAS,EAAEG,MAAM,CAACH;IAAS,CAAC;EACzD;AACF,CAAC;AAED,MAAMM,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACI,mBAAmB,EAAEH,YAAY,CAAC;EAE3E,MAAMY,UAAU,GAAGH,aAAa,CAACT,YAAY,CAACC,IAAI,CAAC;EAEnD,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAClCH,QAAQ,CAAC;MAAEL,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAEO,KAAK,CAACC,MAAM,CAACR;IAAM,CAAC,CAAC;EACxD,CAAC;EAED,MAAMS,cAAc,GAAG,MAAM;IAC3BL,QAAQ,CAAC;MAAEL,IAAI,EAAE,MAAM;MAAEJ,SAAS,EAAE;IAAK,CAAC,CAAC;EAC7C,CAAC;EAED,OAAO;IACLe,SAAS,EAAEP,SAAS,CAACT,IAAI;IACzBiB,aAAa,EAAEN,UAAU;IACzBO,SAAS,EAAEH,cAAc;IACzBH;EACF,CAAC;AACH,CAAC;AAAC,GAnBIL,QAAQ;AAqBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}