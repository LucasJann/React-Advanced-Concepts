{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reposit\\xF3rios\\\\Repository2023\\\\mainReact2.0\\\\my-foodOrder-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport classes from \"./Checkout.module.css\";\n\n// const isFiveChars = (value) => value.trim().length === 5;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const {\n    input: enteredName,\n    inputIsValid: inputNameIsValid,\n    inputHasError: thisNameHasError,\n    inputIsTouched: onNameBlurHandler,\n    inputChanged: nameChangeHandler\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    input: enteredStreet,\n    inputIsValid: inputStreetIsValid,\n    inputHasError: thisStreetHasError,\n    inputIsTouched: onStreetBlurHandler,\n    inputChanged: streetChangeHandler\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    inputName: enteredPostal,\n    inputIsValid: inputPostalIsValid,\n    inputHasError: thisPostalHasError,\n    inputIsTouched: onPostalBlurHandler,\n    inputChanged: postalChangeHandler\n  } = useInput(value => value.trim().length === 5);\n  const {\n    inputName: enteredCity,\n    inputIsValid: inputCityIsValid,\n    inputHasError: thisCityHasError,\n    inputIsTouched: onCityBlurHandler,\n    inputChanged: cityChangeHandler\n  } = useInput(value => value.trim() !== \"\");\n  const formIsValid = inputNameIsValid && inputStreetIsValid && inputPostalIsValid && inputCityIsValid;\n\n  //   if (!formIsValid) {\n  //     return;\n  //   }\n\n  //   props.onConfirm({\n  //     name: enteredName,\n  //     street: enteredStreet,\n  //     city: enteredCity,\n  //     postalCode: enteredPostalCode,\n  //   })\n\n  const nameControlClasses = `${classes.control} ${!thisNameHasError ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${!thisStreetHasError ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${!thisPostalHasError ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${!thisCityHasError ? \"\" : classes.invalid}`;\n  const onSubmitHandler = () => {\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: onNameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), thisNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: streetChangeHandler,\n        onBlur: onStreetBlurHandler,\n        value: enteredStreet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), thisStreetHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        onChange: postalChangeHandler,\n        onBlur: onPostalBlurHandler,\n        value: enteredPostal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), thisPostalHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: cityChangeHandler,\n        onBlur: onCityBlurHandler,\n        value: enteredCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), thisCityHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'classes.submit',\n        disabled: formIsValid,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"w8y0xbcicvoeA/RKX8WpNQBGxT0=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useInput","classes","Checkout","props","input","enteredName","inputIsValid","inputNameIsValid","inputHasError","thisNameHasError","inputIsTouched","onNameBlurHandler","inputChanged","nameChangeHandler","value","trim","enteredStreet","inputStreetIsValid","thisStreetHasError","onStreetBlurHandler","streetChangeHandler","inputName","enteredPostal","inputPostalIsValid","thisPostalHasError","onPostalBlurHandler","postalChangeHandler","length","enteredCity","inputCityIsValid","thisCityHasError","onCityBlurHandler","cityChangeHandler","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","onSubmitHandler","onConfirm","name","street","city","postalCode","form","actions","onCancel"],"sources":["C:/RepositÃ³rios/Repository2023/mainReact2.0/my-foodOrder-app/src/components/Cart/Checkout.js"],"sourcesContent":["import React from \"react\";\r\nimport useInput from \"../hooks/use-input\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\n// const isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const {\r\n    input: enteredName,\r\n    inputIsValid: inputNameIsValid,\r\n    inputHasError: thisNameHasError,\r\n    inputIsTouched: onNameBlurHandler,\r\n    inputChanged: nameChangeHandler,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    input: enteredStreet,\r\n    inputIsValid: inputStreetIsValid,\r\n    inputHasError: thisStreetHasError,\r\n    inputIsTouched: onStreetBlurHandler,\r\n    inputChanged: streetChangeHandler,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    inputName: enteredPostal,\r\n    inputIsValid: inputPostalIsValid,\r\n    inputHasError: thisPostalHasError,\r\n    inputIsTouched: onPostalBlurHandler,\r\n    inputChanged: postalChangeHandler,\r\n  } = useInput((value) => value.trim().length === 5);\r\n\r\n  const {\r\n    inputName: enteredCity,\r\n    inputIsValid: inputCityIsValid,\r\n    inputHasError: thisCityHasError,\r\n    inputIsTouched: onCityBlurHandler,\r\n    inputChanged: cityChangeHandler,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n    const formIsValid =\r\n    inputNameIsValid &&\r\n    inputStreetIsValid &&\r\n    inputPostalIsValid &&\r\n    inputCityIsValid;\r\n\r\n  //   if (!formIsValid) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   props.onConfirm({\r\n  //     name: enteredName,\r\n  //     street: enteredStreet,\r\n  //     city: enteredCity,\r\n  //     postalCode: enteredPostalCode,\r\n  //   })\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    !thisNameHasError ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const streetControlClasses = `${classes.control} ${\r\n    !thisStreetHasError ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    !thisPostalHasError ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const cityControlClasses = `${classes.control} ${\r\n    !thisCityHasError ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const onSubmitHandler = () => {\r\n    props.onConfirm({\r\n          name: enteredName,\r\n          street: enteredStreet,\r\n          city: enteredCity,\r\n          postalCode: enteredPostal,\r\n        })\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={onSubmitHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameChangeHandler}\r\n          onBlur={onNameBlurHandler}\r\n          value={enteredName}\r\n        />\r\n        {thisNameHasError && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={streetChangeHandler}\r\n          onBlur={onStreetBlurHandler}\r\n          value={enteredStreet}\r\n        />\r\n        {thisStreetHasError && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postal\"\r\n          onChange={postalChangeHandler}\r\n          onBlur={onPostalBlurHandler}\r\n          value={enteredPostal}\r\n        />\r\n        {thisPostalHasError && (\r\n          <p>Please enter a valid postal code (5 characters long)!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={cityChangeHandler}\r\n          onBlur={onCityBlurHandler}\r\n          value={enteredCity}\r\n        />\r\n        {thisCityHasError && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={'classes.submit'} disabled={formIsValid}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}