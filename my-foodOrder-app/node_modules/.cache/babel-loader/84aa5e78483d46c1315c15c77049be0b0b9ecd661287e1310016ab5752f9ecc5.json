{"ast":null,"code":"var _s = $RefreshSig$();\nimport react, { useReducer } from \"react\";\nconst initialState = {\n  name: \"\",\n  street: \"\",\n  city: \"\",\n  postalCode: \"\",\n  isTouched: false\n};\nconst inputReducerHandler = action => {\n  if (action.type === \"INPUT\") {\n    return {\n      name: action.value\n    };\n  }\n};\nconst useInput = validateInput => {\n  _s();\n  const [initState, dispatch] = useReducer(inputReducerHandler, initialState);\n  const isValidity = validateInput(initState.name);\n  console.log(initState);\n  console.log(isValidity);\n  const inputNameChanged = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n\n  //   const confirmHandler = (event) => {\n  //     event.preventDefault();\n\n  //     const enteredNameIsValid = !isEmpty(enteredName);\n  //     const enteredStreetIsValid = !isEmpty(enteredStreet);\n  //     const enteredCityIsValid = !isEmpty(enteredCity);\n  //     const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n  //     setFormInputsValidity({\n  //       name: enteredNameIsValid,\n  //       street: enteredStreetIsValid,\n  //       city: enteredCityIsValid,\n  //       postalCode: enteredPostalCodeIsValid,\n  //     });\n\n  return {\n    inputName: initState.name,\n    isValidity,\n    inputNameChanged\n  };\n};\n_s(useInput, \"0eh9+jZA62YGBrtcoO0CgU1TP2c=\");\nexport default useInput;","map":{"version":3,"names":["react","useReducer","initialState","name","street","city","postalCode","isTouched","inputReducerHandler","action","type","value","useInput","validateInput","initState","dispatch","isValidity","console","log","inputNameChanged","event","target","inputName"],"sources":["C:/RepositÃ³rios/Repository2023/mainReact2.0/my-foodOrder-app/src/components/hooks/use-input.js"],"sourcesContent":["import react, { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  street: \"\",\r\n  city: \"\",\r\n  postalCode: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputReducerHandler = (action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return { name: action.value };\r\n  }\r\n};\r\n\r\nconst useInput = (validateInput) => {\r\n  const [initState, dispatch] = useReducer(inputReducerHandler, initialState);\r\n\r\n  const isValidity = validateInput(initState.name);\r\n\r\n  console.log(initState);\r\n  console.log(isValidity)\r\n\r\n  const inputNameChanged = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n  };\r\n\r\n\r\n  //   const confirmHandler = (event) => {\r\n  //     event.preventDefault();\r\n\r\n  //     const enteredNameIsValid = !isEmpty(enteredName);\r\n  //     const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n  //     const enteredCityIsValid = !isEmpty(enteredCity);\r\n  //     const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n  //     setFormInputsValidity({\r\n  //       name: enteredNameIsValid,\r\n  //       street: enteredStreetIsValid,\r\n  //       city: enteredCityIsValid,\r\n  //       postalCode: enteredPostalCodeIsValid,\r\n  //     });\r\n\r\n  return {\r\n    inputName: initState.name,\r\n    isValidity,\r\n    inputNameChanged,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,mBAAmB,GAAIC,MAAM,IAAK;EACtC,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MAAEP,IAAI,EAAEM,MAAM,CAACE;IAAM,CAAC;EAC/B;AACF,CAAC;AAED,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACO,mBAAmB,EAAEN,YAAY,CAAC;EAE3E,MAAMc,UAAU,GAAGH,aAAa,CAACC,SAAS,CAACX,IAAI,CAAC;EAEhDc,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EACtBG,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EAEvB,MAAMG,gBAAgB,GAAIC,KAAK,IAAK;IAClCL,QAAQ,CAAC;MAAEL,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAES,KAAK,CAACC,MAAM,CAACV;IAAM,CAAC,CAAC;EACxD,CAAC;;EAGD;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAO;IACLW,SAAS,EAAER,SAAS,CAACX,IAAI;IACzBa,UAAU;IACVG;EACF,CAAC;AACH,CAAC;AAAC,GAjCIP,QAAQ;AAmCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}