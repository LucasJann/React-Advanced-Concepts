{"ast":null,"code":"var _s = $RefreshSig$();\nimport react, { useReducer } from \"react\";\nconst useInput = validateInput => {\n  _s();\n  const initialState = {\n    name: \"\",\n    street: \"\",\n    city: \"\",\n    postalCode: \"\"\n  };\n  const {\n    initState,\n    dispatch\n  } = useReducer(inputReducerHandler, initialState);\n  const inputReducerHandler = () => {\n    if (action.type === \"INPUT\") {\n      return {\n        name: action.value\n      };\n    }\n  };\n  const inputNameChanged = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n\n  //   const confirmHandler = (event) => {\n  //     event.preventDefault();\n\n  //     const enteredNameIsValid = !isEmpty(enteredName);\n  //     const enteredStreetIsValid = !isEmpty(enteredStreet);\n  //     const enteredCityIsValid = !isEmpty(enteredCity);\n  //     const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n  //     setFormInputsValidity({\n  //       name: enteredNameIsValid,\n  //       street: enteredStreetIsValid,\n  //       city: enteredCityIsValid,\n  //       postalCode: enteredPostalCodeIsValid,\n  //     });\n\n  return {\n    value: initState.name,\n    inputNameChanged\n  };\n};\n_s(useInput, \"VT6w0qEbqF/FPPjawu03+sMQ7TY=\");\nexport default useInput;","map":{"version":3,"names":["react","useReducer","useInput","validateInput","initialState","name","street","city","postalCode","initState","dispatch","inputReducerHandler","action","type","value","inputNameChanged","event","target"],"sources":["C:/RepositÃ³rios/Repository2023/mainReact2.0/my-foodOrder-app/src/components/hooks/use-input.js"],"sourcesContent":["import react, { useReducer } from \"react\";\r\n\r\nconst useInput = (validateInput) => {\r\n  const initialState = {\r\n    name: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    postalCode: \"\",\r\n  };\r\n\r\n  const { initState, dispatch } = useReducer(inputReducerHandler, initialState);\r\n\r\n  const inputReducerHandler = () => {\r\n    if (action.type === \"INPUT\") {\r\n      return { name: action.value };\r\n    }\r\n  };\r\n\r\n  const inputNameChanged = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n  };\r\n\r\n//   const confirmHandler = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const enteredNameIsValid = !isEmpty(enteredName);\r\n//     const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n//     const enteredCityIsValid = !isEmpty(enteredCity);\r\n//     const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n//     setFormInputsValidity({\r\n//       name: enteredNameIsValid,\r\n//       street: enteredStreetIsValid,\r\n//       city: enteredCityIsValid,\r\n//       postalCode: enteredPostalCodeIsValid,\r\n//     });\r\n\r\n    return {\r\n      value: initState.name,\r\n      inputNameChanged,\r\n    };\r\n  };\r\n\r\nexport default useInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAClC,MAAMC,YAAY,GAAG;IACnBC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE;EACd,CAAC;EAED,MAAM;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGT,UAAU,CAACU,mBAAmB,EAAEP,YAAY,CAAC;EAE7E,MAAMO,mBAAmB,GAAG,MAAM;IAChC,IAAIC,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;MAC3B,OAAO;QAAER,IAAI,EAAEO,MAAM,CAACE;MAAM,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClCN,QAAQ,CAAC;MAAEG,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAEE,KAAK,CAACC,MAAM,CAACH;IAAM,CAAC,CAAC;EACxD,CAAC;;EAEH;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEI,OAAO;IACLA,KAAK,EAAEL,SAAS,CAACJ,IAAI;IACrBU;EACF,CAAC;AACH,CAAC;AAAC,GAvCEb,QAAQ;AAyCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}