{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reposit\\xF3rios\\\\Repository2023\\\\mainReact2.0\\\\my-form-app\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [nameIsValid, setNameIsValid] = useState(false);\n  const [lastNameIsValid, setLastNameIsValid] = useState(false);\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [nameInputClass, setNameInputClass] = useState(\"form-control\");\n  const [lastNameInputClass, setLastNameInputClass] = useState(\"form-control\");\n  const [emailInputClass, setEmailInputClass] = useState(\"form-control\");\n  const [isValid, setIsValid] = useState(false);\n  useEffect(() => {\n    console.log('it dont work');\n    validator.bind();\n  }, [nameIsValid, lastNameIsValid, emailIsValid]);\n  const nameChangeInputHandler = event => {\n    setEnteredName(event.target.value);\n    setNameInputClass(\"form-control\");\n  };\n  const lastNameChangeInputHandler = event => {\n    setEnteredLastName(event.target.value);\n    setLastNameInputClass(\"form-control\");\n  };\n  const emailChangeInputHandler = event => {\n    setEnteredEmail(event.target.value);\n    setEmailInputClass(\"form-control\");\n  };\n  const validateNameInputHandler = () => {\n    if (enteredName.trim().length > 0) {\n      setNameIsValid(true);\n      setNameInputClass(\"form-control\");\n    } else {\n      setNameIsValid(false);\n      setNameInputClass(\"form-control invalid\");\n    }\n  };\n  const validateLastNameInputHandler = () => {\n    if (enteredLastName.trim().length > 0) {\n      setLastNameIsValid(true);\n      setLastNameInputClass(\"form-control\");\n    } else {\n      setLastNameIsValid(false);\n      setLastNameInputClass(\"form-control invalid\");\n    }\n  };\n  const validateEmailInputHandler = () => {\n    if (enteredEmail.includes(\"@\")) {\n      setEmailIsValid(true);\n      setEmailInputClass(\"form-control\");\n    } else {\n      setEmailIsValid(false);\n      setEmailInputClass(\"form-control invalid\");\n    }\n  };\n  const validator = () => {\n    if (nameIsValid && lastNameIsValid && emailIsValid) {\n      console.log('it worked');\n      formIsValid = true;\n    } else {\n      formIsValid = false;\n    }\n  };\n  const formIsValid = false;\n  const submitHandler = () => {\n    setEnteredName(\"\");\n    setEnteredLastName(\"\");\n    setEnteredEmail(\"\");\n    setIsValid(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameChangeInputHandler,\n          onBlur: validateNameInputHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameChangeInputHandler,\n          onBlur: validateLastNameInputHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeInputHandler,\n        onBlur: validateEmailInputHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"Ie6bRoxYAze8TwlN3dW728FVtd8=\");\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useState","useEffect","BasicForm","props","enteredName","setEnteredName","enteredLastName","setEnteredLastName","enteredEmail","setEnteredEmail","nameIsValid","setNameIsValid","lastNameIsValid","setLastNameIsValid","emailIsValid","setEmailIsValid","nameInputClass","setNameInputClass","lastNameInputClass","setLastNameInputClass","emailInputClass","setEmailInputClass","isValid","setIsValid","console","log","validator","bind","nameChangeInputHandler","event","target","value","lastNameChangeInputHandler","emailChangeInputHandler","validateNameInputHandler","trim","length","validateLastNameInputHandler","validateEmailInputHandler","includes","formIsValid","submitHandler"],"sources":["C:/RepositÃ³rios/Repository2023/mainReact2.0/my-form-app/src/components/BasicForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst BasicForm = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  const [nameIsValid, setNameIsValid] = useState(false);\n  const [lastNameIsValid, setLastNameIsValid] = useState(false);\n  const [emailIsValid, setEmailIsValid] = useState(false);\n\n  const [nameInputClass, setNameInputClass] = useState(\"form-control\");\n  const [lastNameInputClass, setLastNameInputClass] = useState(\"form-control\");\n  const [emailInputClass, setEmailInputClass] = useState(\"form-control\");\n\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    console.log('it dont work')\n    validator.bind()\n  }, [nameIsValid, lastNameIsValid, emailIsValid]);\n\n  const nameChangeInputHandler = (event) => {\n    setEnteredName(event.target.value);\n    setNameInputClass(\"form-control\");\n  };\n  const lastNameChangeInputHandler = (event) => {\n    setEnteredLastName(event.target.value);\n    setLastNameInputClass(\"form-control\");\n  };\n  const emailChangeInputHandler = (event) => {\n    setEnteredEmail(event.target.value);\n    setEmailInputClass(\"form-control\");\n  };\n\n  const validateNameInputHandler = () => {\n    if (enteredName.trim().length > 0) {\n      setNameIsValid(true);\n      setNameInputClass(\"form-control\");\n    } else {\n      setNameIsValid(false);\n      setNameInputClass(\"form-control invalid\");\n    }\n  };\n  const validateLastNameInputHandler = () => {\n    if (enteredLastName.trim().length > 0) {\n      setLastNameIsValid(true);\n      setLastNameInputClass(\"form-control\");\n    } else {\n      setLastNameIsValid(false);\n      setLastNameInputClass(\"form-control invalid\");\n    }\n  };\n  const validateEmailInputHandler = () => {\n    if (enteredEmail.includes(\"@\")) {\n      setEmailIsValid(true);\n      setEmailInputClass(\"form-control\");\n    } else {\n      setEmailIsValid(false);\n      setEmailInputClass(\"form-control invalid\");\n    }\n  };\n\n  const validator = () => {\n    if(nameIsValid && lastNameIsValid && emailIsValid){\n      console.log('it worked')\n      formIsValid = true\n    } else {\n      formIsValid = false\n    }\n  }\n\n  const formIsValid = false;\n    \n\n  const submitHandler = () => {\n    setEnteredName(\"\");\n    setEnteredLastName(\"\");\n    setEnteredEmail(\"\");\n    setIsValid(false);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={nameInputClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={nameChangeInputHandler}\n            onBlur={validateNameInputHandler}\n            value={enteredName}\n          />\n        </div>\n        <div className={lastNameInputClass}>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            onChange={lastNameChangeInputHandler}\n            onBlur={validateLastNameInputHandler}\n            value={enteredLastName}\n          />\n        </div>\n      </div>\n      <div className={emailInputClass}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeInputHandler}\n          onBlur={validateEmailInputHandler}\n          value={enteredEmail}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}