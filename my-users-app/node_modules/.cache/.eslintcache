[{"C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\index.js":"1","C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\App.js":"2","C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\components\\Users.js":"3","C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\components\\User.js":"4","C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\components\\UserFinder.js":"5","C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\store\\user-context.js":"6"},{"size":179,"mtime":1674668850573,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1675823457837,"results":"9","hashOfConfig":"8"},{"size":1069,"mtime":1674672477228,"results":"10","hashOfConfig":"8"},{"size":387,"mtime":1674673945582,"results":"11","hashOfConfig":"8"},{"size":1895,"mtime":1675828299138,"results":"12","hashOfConfig":"8"},{"size":122,"mtime":1674680883610,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1os0bwo",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\index.js",[],[],"C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\App.js",[],[],"C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\components\\Users.js",["33"],[],"C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\components\\User.js",[],[],"C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\components\\UserFinder.js",["34","35"],[],"import { Component, Fragment, useState, useEffect } from \"react\";\r\n\r\nimport Users from \"./Users\";\r\nimport classes from \"./UserFinder.module.css\";\r\nimport UsersContext from \"../store/user-context\";\r\n\r\nconst DUMMY_USERS = [\r\n  { id: \"u1\", name: \"Max\" },\r\n  { id: \"u2\", name: \"Manuel\" },\r\n  { id: \"u3\", name: \"Julie\" },\r\n];\r\n\r\nclass UserFinder extends Component {\r\n  static contextType = UsersContext;\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      filteredUsers: [DUMMY_USERS],\r\n      searchTerm: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchTerm !== this.state.searchTerm) {\r\n      this.setState({\r\n        filteredUsers: DUMMY_USERS.filter((user) =>\r\n          user.name.includes(this.state.searchTerm)\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ filteredUsers: this.context.users });\r\n  }\r\n\r\n  searchChangeHandler(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <input\r\n          className={classes.finder}\r\n          type=\"search\"\r\n          onChange={this.searchChangeHandler.bind(this)}\r\n        />\r\n        <Users users={this.state.filteredUsers} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// const UserFinder = () => {\r\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     setFilteredUsers(\r\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n//     );\r\n//   }, [searchTerm]);\r\n\r\n//   const searchChangeHandler = (event) => {\r\n//     setSearchTerm(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <input type=\"search\" onChange={searchChangeHandler} />\r\n//       <Users users={filteredUsers} />\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\nexport default UserFinder;\r\n","C:\\Repositórios\\Repository2023\\mainReact2.0\\my-users-app\\src\\store\\user-context.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":1,"column":21,"nodeType":"38","messageId":"39","endLine":1,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":1,"column":31,"nodeType":"38","messageId":"39","endLine":1,"endColumn":39},{"ruleId":"36","severity":1,"message":"40","line":1,"column":41,"nodeType":"38","messageId":"39","endLine":1,"endColumn":50},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used."]