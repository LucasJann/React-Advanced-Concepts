{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reposit\\xF3rios\\\\Repository2023\\\\react2.0\\\\my-food-order-app\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://react-http-f8211-default-rtdb.firebaseio.com/orders.json\");\n        if (!response.ok) {\n          throw new Error(\"Something went wrong!\");\n        }\n        const responseData = await response.json();\n        const loadedMeals = [];\n\n        // Iterar sobre as chaves do objeto responseData\n        Object.keys(responseData).forEach(key => {\n          // Acessar cada registro pelo valor da chave \"user\"\n          const loginData = responseData[key].user;\n          loadedMeals.push({\n            id: key,\n            // Aqui você pode utilizar a chave como ID, caso seja útil\n            lastName: loginData.lastName,\n            name: loginData.name\n          });\n        });\n        console.log(loadedMeals);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error.message);\n        // Aqui você pode tratar o erro de acordo com o que deseja fazer.\n        // Por exemplo, mostrar uma mensagem de erro na UI.\n      }\n    };\n\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"5BB3zB1G5TPlSPeHzSJzCY+EgO0=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchData","response","fetch","ok","Error","responseData","json","loadedMeals","Object","keys","forEach","key","loginData","user","push","id","lastName","name","console","log","error","message","mealsLoading","mealsError","mealsList","map","meal","description","price"],"sources":["C:/Repositórios/Repository2023/react2.0/my-food-order-app/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://react-http-f8211-default-rtdb.firebaseio.com/orders.json\"\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n  \r\n        const responseData = await response.json();\r\n  \r\n        const loadedMeals = [];\r\n  \r\n        // Iterar sobre as chaves do objeto responseData\r\n        Object.keys(responseData).forEach((key) => {\r\n          // Acessar cada registro pelo valor da chave \"user\"\r\n          const loginData = responseData[key].user;\r\n          loadedMeals.push({\r\n            id: key, // Aqui você pode utilizar a chave como ID, caso seja útil\r\n            lastName: loginData.lastName,\r\n            name: loginData.name,\r\n          });\r\n        });\r\n  \r\n        console.log(loadedMeals);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error.message);\r\n        // Aqui você pode tratar o erro de acordo com o que deseja fazer.\r\n        // Por exemplo, mostrar uma mensagem de erro na UI.\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n  \r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.mealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.mealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AAAC;AAElD,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEAAkE,CACnE;QAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAE1C,MAAMC,WAAW,GAAG,EAAE;;QAEtB;QACAC,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC,CAACK,OAAO,CAAEC,GAAG,IAAK;UACzC;UACA,MAAMC,SAAS,GAAGP,YAAY,CAACM,GAAG,CAAC,CAACE,IAAI;UACxCN,WAAW,CAACO,IAAI,CAAC;YACfC,EAAE,EAAEJ,GAAG;YAAE;YACTK,QAAQ,EAAEJ,SAAS,CAACI,QAAQ;YAC5BC,IAAI,EAAEL,SAAS,CAACK;UAClB,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;MAC1B,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;QACpD;QACA;MACF;IACF,CAAC;;IAEDrB,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIJ,SAAS,EAAE;IACb,oBACE;MAAS,SAAS,EAAEJ,OAAO,CAAC8B,YAAa;MAAA,uBACvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAiB;MAAA;MAAA;MAAA;IAAA,QACT;EAEd;EAEA,IAAIxB,SAAS,EAAE;IACb,oBACE;MAAS,SAAS,EAAEN,OAAO,CAAC+B,UAAW;MAAA,uBACrC;QAAA,UAAIzB;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACV;EAEd;EAEA,MAAM0B,SAAS,GAAG9B,KAAK,CAAC+B,GAAG,CAAEC,IAAI,iBAC/B,QAAC,QAAQ;IAEP,EAAE,EAAEA,IAAI,CAACX,EAAG;IACZ,IAAI,EAAEW,IAAI,CAACT,IAAK;IAChB,WAAW,EAAES,IAAI,CAACC,WAAY;IAC9B,KAAK,EAAED,IAAI,CAACE;EAAM,GAJbF,IAAI,CAACX,EAAE;IAAA;IAAA;IAAA;EAAA,QAMf,CAAC;EAEF,oBACE;IAAS,SAAS,EAAEvB,OAAO,CAACE,KAAM;IAAA,uBAChC,QAAC,IAAI;MAAA,uBACH;QAAA,UAAK8B;MAAS;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GA5EI/B,cAAc;AAAA,KAAdA,cAAc;AA8EpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}